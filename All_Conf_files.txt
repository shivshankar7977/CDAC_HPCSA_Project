root@jenkins:~# hostnamectl
 Static hostname: jenkins
       Icon name: computer-vm
         Chassis: vm
      Machine ID: 9737a257ffbb43c4bc36435f1285dbef
         Boot ID: 3aee2d6291834c6c8d97135469d093d0
  Virtualization: vmware
Operating System: Ubuntu 22.04.1 LTS
          Kernel: Linux 6.2.0-35-generic
    Architecture: x86-64











pipeline {
    
    agent any
    
    
    stages {
        stage('build checkout') {
            steps {
                git 'https://github.com/shivshankar7977/Project_demo.git'
            }
        }
        stage ('Stop previous running container'){
            steps{
                sh returnStatus: true, script: 'sudo docker stop $(docker ps -a | grep ${JOB_NAME} | awk \'{print $1}\')'
                sh returnStatus: true, script: 'sudo docker rm ${JOB_NAME}'
                sh returnStatus: true, script: 'sudo docker rmi $(docker images | grep shivshankar7977/python-jenkins | awk \'{print $3}\') --force' //this will delete all images
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t shivshankar7977/python-jenkins .'
                }
            }
        }
         
        stage('Deploy Docker Image') {
            steps {
                script {
                
                        sh "docker login -u shivshankar7977 -p dckr_pat_PyaiP1f5bM1CY4QFScZCV1VCQ0E"
                     
                    sh 'docker push shivshankar7977/python-jenkins'
                }
            }
        }
        
        stage('Test - Run Docker Container on Jenkins node') {
           steps {
                sh label: '', script: "docker run -d --name ${JOB_NAME} -p 5001:5000 shivshankar7977/python-jenkins"
            }
        }
        stage('Deploy to Test Server') {
           steps {
               script {
                   def stopcontainer = "docker stop ${JOB_NAME}"
                   def delcontName = "docker rm ${JOB_NAME}"
                   def delimages = 'docker image prune -a --force'
                   def drun = "docker run -d --name ${JOB_NAME} -p 5001:5000 shivshankar7977/python-jenkins"
                   println "${drun}"
                   sshagent(['tomcat-ssh']) {
                       sh script: "ssh -o StrictHostKeyChecking=no deployer@192.168.120.133 ${stopcontainer}", returnStatus: true
                       sh script: "ssh -o StrictHostKeyChecking=no deployer@192.168.120.133 ${delcontName}", returnStatus: true
                       sh script: "ssh -o StrictHostKeyChecking=no deployer@192.168.120.133 ${delimages}", returnStatus: true
                       sh script: "ssh -o StrictHostKeyChecking=no deployer@192.168.120.133 ${drun}"
                    }
                }
            }
        }
    }
}
